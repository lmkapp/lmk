openapi: 3.0.0
paths:
  /v1/app/current:
    get:
      operationId: getCurrentApp
      summary: ''
      description: |-
        When called by an authorized app, this endpoint will return
        metadata about the app. For any other caller, this endpoint
        is forbidden
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppWithConnectedUserEmailResponse'
      tags:
        - app
  /v1/headlessAuth:
    post:
      operationId: createHeadlessAuthSession
      summary: ''
      description: |-
        Create a headless auth session, which allows certain LMK apps
        to retrieve oauth access tokens without any server component
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHeadlessAuthSessionRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeadlessAuthSessionResponse'
      tags:
        - headlessAuth
  /v1/headlessAuth/{sessionId}:
    get:
      operationId: getHeadlessAuthSession
      summary: ''
      description: Get the headless auth session with the given ID.
      parameters:
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeadlessAuthSessionResponse'
      tags:
        - headlessAuth
  /v1/headlessAuth/{sessionId}/token:
    get:
      operationId: retrieveHeadlessAuthSessionToken
      summary: ''
      description: |-
        Retrieve the oauth token for the headless auth session. If the
        session is complete, the access and refresh tokens will be
        returned. Otherwise, this endpoint will return an error code.
      parameters:
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
      tags:
        - headlessAuth
  /v1/headlessAuth/refresh:
    post:
      operationId: refreshHeadlessAuthToken
      summary: ''
      description: Refresh an oauth access token obtained through a headless auth session
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeadlessAuthRefreshTokenRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
      tags:
        - headlessAuth
  /oauth/token:
    post:
      operationId: token
      summary: ''
      description: |-
        This is the oauth access token endpoint as defined by the oauth spec.
        After an access code is given to an oauth app, they use that access
        code as well as their client id and secret to get an access token
        and refresh token from this endpoint.
      parameters:
        - name: authorization
          required: true
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
      tags:
        - oauth
  /v1/notificationChannel:
    get:
      operationId: listNotificationChannels
      summary: ''
      description: |-
        List the notification channels for the current user. If called by
        an oauth app, the results will depend on what scopes have been
        granted to the app. If `channel.read` has not been granted,
        this will return an empty list of channels. Otherwise, it will
        return all of the channels unless the user limited the app's
        visibillity during the oauth flow.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannelsResponse'
      tags:
        - notification
  /v1/event:
    post:
      operationId: postEvent
      summary: ''
      description: |-
        Post an event to LMK. This will appear in the LMK app and
        can optionally be used to notify the user on one of their
        configured notification channels.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      tags:
        - event
  /v1/session:
    post:
      operationId: createSession
      summary: ''
      description: |-
        Create an interactive session. This appears in the LMK app and allows
        both monitoring the state of a remote process and interacting with it,
        or configuring notifications to be send when it finishes running.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
      tags:
        - session
  /v1/session/{sessionId}:
    get:
      operationId: getSession
      summary: ''
      description: Get an interactive session by ID.
      parameters:
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
      tags:
        - session
    patch:
      operationId: updateSession
      summary: ''
      description: Update the state of an interactive session.
      parameters:
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
      tags:
        - session
  /v1/session/{sessionId}/end:
    post:
      operationId: endSession
      summary: ''
      description: |-
        Mark an interactive session as ended. This will not allow any further
        updates to the session.
      parameters:
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
      tags:
        - session
  /v1/session/{sessionId}/action:
    post:
      operationId: sessionAction
      summary: ''
      description: |-
        Perform one of the available actions. If no client is
        connected to the interactive session, it will return
        a 412 error code.
      parameters:
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionActionRequest'
      responses:
        '201':
          description: ''
      tags:
        - session
info:
  title: LMK API
  description: ''
  version: 0.0.1
  contact: {}
tags:
  - name: app
    description: Endpoints related to oauth apps
  - name: headlessAuth
    description: Enpdoints related to headless authentication sessions
  - name: oauth
    description: Authorization and access token endpoints for oauth
  - name: notification
    description: Endpoints related to notification channels
  - name: event
    description: API for posting events
  - name: session
    description: Endpoints related to creating and updating interactive sessions
servers: []
components:
  schemas:
    AppWithConnectedUserEmailResponse:
      type: object
      properties:
        connectedUserEmail:
          type: string
        appId:
          type: string
        name:
          type: string
        iconUrl:
          type: string
        description:
          type: string
        introWarningMarkdown:
          type: string
        createdAt:
          type: string
        lastUpdatedAt:
          type: string
      required:
        - appId
        - name
        - iconUrl
        - description
        - createdAt
        - lastUpdatedAt
    CreateHeadlessAuthSessionRequest:
      type: object
      properties:
        appId:
          type: string
        scope:
          type: string
      required:
        - appId
        - scope
    HeadlessAuthSessionResponse:
      type: object
      properties:
        sessionId:
          type: string
        appId:
          type: string
        scope:
          type: string
        authorizeUrl:
          type: string
        createdAt:
          type: string
      required:
        - sessionId
        - appId
        - scope
        - authorizeUrl
        - createdAt
    AccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: number
        scope:
          type: string
        refresh_token:
          type: string
      required:
        - access_token
        - token_type
        - expires_in
        - scope
    HeadlessAuthRefreshTokenRequest:
      type: object
      properties:
        appId:
          type: string
        refreshToken:
          type: string
      required:
        - appId
        - refreshToken
    AccessTokenRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - authorization_code
            - refresh_token
        redirect_uri:
          type: string
        code:
          type: string
        refresh_token:
          type: string
      required:
        - grant_type
        - redirect_uri
        - code
        - refresh_token
    NotificationChannelsResponse:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelResponse'
      required:
        - channels
    EventRequest:
      type: object
      properties:
        sessionId:
          type: string
        message:
          type: string
        contentType:
          type: string
          enum:
            - text/plain
            - text/markdown
        notificationConfig:
          $ref: '#/components/schemas/EventNotificationConfiguration'
      required:
        - message
    EventResponse:
      type: object
      properties:
        eventId:
          type: string
        sessionId:
          type: string
        userId:
          type: string
        actor:
          $ref: '#/components/schemas/ActorResponse'
        message:
          type: string
        contentType:
          type: string
          enum:
            - text/plain
            - text/markdown
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelInfo'
        createdAt:
          type: string
      required:
        - eventId
        - userId
        - actor
        - message
        - contentType
        - channels
        - createdAt
    CreateSessionRequest:
      type: object
      properties:
        state:
          oneOf:
            - $ref: '#/components/schemas/JupyterSessionState'
            - $ref: '#/components/schemas/ProcessSessionState'
            - $ref: '#/components/schemas/NoneSessionState'
        name:
          type: string
      required:
        - state
        - name
    SessionResponse:
      type: object
      properties:
        state:
          oneOf:
            - $ref: '#/components/schemas/JupyterSessionState'
            - $ref: '#/components/schemas/ProcessSessionState'
            - $ref: '#/components/schemas/NoneSessionState'
        sessionId:
          type: string
        name:
          type: string
        type:
          enum:
            - jupyter
            - process
            - none
          type: string
        createdAt:
          type: string
        createdByActor:
          $ref: '#/components/schemas/ActorResponse'
        lastUpdatedAt:
          type: string
        lastUpdatedByActor:
          $ref: '#/components/schemas/ActorResponse'
        endedAt:
          type: string
          nullable: true
        endedByActor:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ActorResponse'
      required:
        - state
        - sessionId
        - name
        - type
        - createdAt
        - createdByActor
        - lastUpdatedAt
        - lastUpdatedByActor
        - endedAt
        - endedByActor
    UpdateSessionRequest:
      type: object
      properties:
        state:
          oneOf:
            - $ref: '#/components/schemas/PartialJupyterSessionState'
            - $ref: '#/components/schemas/PartialProcessSessionState'
            - $ref: '#/components/schemas/PartialNoneSessionState'
    SessionActionRequest:
      type: object
      properties:
        body:
          oneOf:
            - $ref: '#/components/schemas/ProcessSendSignalRequest'
        action:
          type: string
      required:
        - action
    ActorResponse:
      type: object
      properties:
        type:
          type: string
          enum:
            - USER
            - ADMIN
            - APP
            - ANONYMOUS
        actorId:
          type: string
        iconUrl:
          type: string
        name:
          type: string
      required:
        - type
        - actorId
        - name
    NotificationChannelResponse:
      type: object
      properties:
        payload:
          oneOf:
            - $ref: '#/components/schemas/EmailChannelPayload'
            - $ref: '#/components/schemas/TextMessageChannelPayload'
            - $ref: '#/components/schemas/WebPushChannelPayload'
          discriminator:
            propertyName: type
            mapping:
              email: '#/components/schemas/EmailChannelPayload'
              text-message: '#/components/schemas/TextMessageChannelPayload'
              web-push: '#/components/schemas/WebPushChannelPayload'
        notificationChannelId:
          type: string
        name:
          type: string
        order:
          type: number
        isDefault:
          type: boolean
        isManaged:
          type: boolean
        isVerified:
          type: boolean
        verificationRequired:
          type: boolean
        createdAt:
          type: string
        createdByActor:
          $ref: '#/components/schemas/ActorResponse'
        lastUpdatedAt:
          type: string
        lastUpdatedByActor:
          $ref: '#/components/schemas/ActorResponse'
      required:
        - payload
        - notificationChannelId
        - name
        - order
        - isDefault
        - isManaged
        - isVerified
        - verificationRequired
        - createdAt
        - createdByActor
        - lastUpdatedAt
        - lastUpdatedByActor
    EventNotificationConfiguration:
      type: object
      properties:
        notify:
          type: boolean
        channelIds:
          type: array
          items:
            type: string
      required:
        - notify
    NotificationChannelInfo:
      type: object
      properties:
        notificationChannelId:
          type: string
        type:
          type: string
          enum:
            - email
            - text-message
            - web-push
        name:
          type: string
        status:
          type: string
          enum:
            - NOT_SENT
            - PENDING
            - DELIVERED
            - FAILED
      required:
        - notificationChannelId
        - type
        - name
        - status
    JupyterSessionState:
      type: object
      properties:
        type:
          type: string
          enum:
            - jupyter
        url:
          type: string
        notebookName:
          type: string
        shellState:
          type: string
        cellState:
          type: string
        cellText:
          type: string
        cellError:
          type: string
        executionNum:
          type: number
        cellStartedAt:
          type: string
        cellFinishedAt:
          type: string
        notifyOn:
          type: string
        notifyChannel:
          type: string
      required:
        - type
        - notifyOn
    ProcessSessionState:
      type: object
      properties:
        type:
          type: string
          enum:
            - process
        hostname:
          type: string
        command:
          type: string
        pid:
          type: number
        notifyOn:
          type: string
        notifyChannel:
          type: string
        exitCode:
          type: number
      required:
        - type
        - hostname
        - command
        - pid
        - notifyOn
    NoneSessionState:
      type: object
      properties:
        type:
          type: string
          enum:
            - none
      required:
        - type
    PartialJupyterSessionState:
      type: object
      properties:
        type:
          type: string
          enum:
            - jupyter
        url:
          type: string
        notebookName:
          type: string
        shellState:
          type: string
        cellState:
          type: string
        cellText:
          type: string
        cellError:
          type: string
        executionNum:
          type: number
        cellStartedAt:
          type: string
        cellFinishedAt:
          type: string
        notifyOn:
          type: string
        notifyChannel:
          type: string
    PartialProcessSessionState:
      type: object
      properties:
        type:
          type: string
          enum:
            - process
        hostname:
          type: string
        command:
          type: string
        pid:
          type: number
        notifyOn:
          type: string
        notifyChannel:
          type: string
        exitCode:
          type: number
    PartialNoneSessionState:
      type: object
      properties:
        type:
          type: string
          enum:
            - none
    ProcessSendSignalRequest:
      type: object
      properties:
        signal:
          type: number
      required:
        - signal
    EmailChannelPayload:
      type: object
      properties:
        type:
          type: string
          enum:
            - email
        emailAddress:
          type: string
      required:
        - type
        - emailAddress
    TextMessageChannelPayload:
      type: object
      properties:
        type:
          type: string
          enum:
            - text-message
        phoneNumber:
          type: string
      required:
        - type
        - phoneNumber
    WebPushChannelPayload:
      type: object
      properties:
        type:
          type: string
          enum:
            - web-push
        endpoint:
          type: string
        device:
          type: string
        p256dhKey:
          type: string
        authKey:
          type: string
      required:
        - type
        - endpoint
        - device
        - p256dhKey
        - authKey
