name: Publish packages

on:
  create:
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'
      # PNPM stuff
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install node dependencies
        run: pnpm install --filter @lmkapp/jupyter-widget...

      # Python stuff
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "STORE_PATH=$(venv/bin/pip cache dir)"
      - name: Setup python cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.STORE_PATH }} ./packages/python-client/.tox
          key: ${{ runner.os }}-python-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-
      - name: Install Python dependencies
        run: |
          cd ./packages/python-client
          pnpm generate
          python -m venv venv
          . venv/bin/activate
          pip install -e '.[dev,publish]'
      - name: Build NPM package
        run: |
          cd ./packages/python-client
          . venv/bin/activate
          pnpm build:publish
      - name: Publish NPM package
        run: |
          cd ./packages/python-client
          pnpm npm-publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build Python package
        run: |
          cd ./packages/python-client
          . venv/bin/activate
          pnpm build:python
          pnpm pypi-check
      - name: Publish Python package
        run: |
          cd ./packages/python-client
          . venv/bin/activate
          pnpm pypi-upload
        env:
          TWINE_NON_INTERACTIVE: "true"
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./packages/python-client/dist/lmkapp-*
